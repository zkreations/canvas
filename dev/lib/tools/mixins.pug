//- Markup
//-
//- Inserta inclusion predeterminada (Common por defecto)
//- @author zkreations
//- @link https://www.zkreations.com
mixin markup(type='Common')
  b:defaultmarkup(type=type)
    if block
      block

//- Markup
//-
//- Inserta inclusion de configuracion predeterminada
//- @author zkreations
//- @link https://www.zkreations.com
mixin settings(object={})
  if Object.getOwnPropertyNames(object).length !== 0
    b:widget-settings
      each items, key in object
        b:widget-setting(name=key) #{items}

//- Section
//-
//- Inserta una seccion para widgets que identifica si contiene gadgets
//- @author zkreations
//- @link https://www.zkreations.com
mixin section(id)
  b:section(id=id, cond=`data:widgets any (w => w.sectionId == "${id}")`)&attributes(attributes)
    if block
      block

//- Blogger widgets
//-
//- Crea la estructura por defecto de los gadgets
//- @author zkreations
//- @link https://www.zkreations.com

mixin widget(name="HTML", settings={}, number)
  b:widget(id=number ? name + number : name + widgetCalls[name]++, type=name, version=2)&attributes(attributes)
    +settings(settings)
    b:includable#main
      b:include(name='widget-title')
      b:include(name='content')
    b:includable#content
      if block
        block

//- Blogger root widgets
//-
//- Crea solo la etiqueta widget bloqueada por defecto
//- @author zkreations
//- @link https://www.zkreations.com

mixin root-widget(name="HTML", settings={}, number)
  b:widget(id=number ? name + number : name + widgetCalls[name]++, type=name, version=2)&attributes(attributes)
    +settings(settings)
    if block
      block

//- Blogger CDATA
//-
//- Genera etiquetas que no interpretar√°n XML de Blogger 
//- @author zkreations
//- @link https://www.zkreations.com

mixin cdata(tag)
  #{tag}&attributes(attributes)
    if ['style','script'].includes(tag)
      | /*<![CDATA[*/
    else
      | <![CDATA[
    |
    if block
      block
    |
    |
    if ['style','script'].includes(tag)
      | /*]]>*/
    else
      | ]]>

//- Blogger Skin Meta
//-
//- Genera la informacion del tema a partir de un objeto
//- @author zkreations
//- @link https://www.zkreations.com

mixin skin-meta(object)
  | /*!
  |
  each item, key in object
    | => #{key}: #{item}
    |
  | */

mixin skin-separator(name)
  | 
  | { #{name} }
  | ====================

//- Blogger variable
//-
//- Genera las variables a partir de una arreglo
//- @author zkreations
//- @link https://www.zkreations.com

mixin skin-variable(name,object)
  Variable(name=name,
    description=object.description || name,
    type=object.type || "string",
    color=object.color,
    red=object.red,
    green=object.green,
    blue=object.blue,
    alpha=object.alpha,
    family=object.family,
    size=object.size,
    min=object.min,
    max=object.max,
    hideEditor=object.hideEditor,
    default=object.default,
    value=object.value)/

//- Blogger variables and Group
//-
//- Genera las variables a partir de una arreglo
//- @author zkreations
//- @link https://www.zkreations.com

mixin skin-variables(object)
  each items, key in object
    if items.description || items.selector || Object.entries(items).length === 0
      +skin-variable(key, items)
    else
      +skin-separator(capitalizeFirstLetter(key))
      each variable, key in items
        if variable.group
          +skin-group(key, variable)
        else
          +skin-variable(key, variable)

//- Blogger group
//-
//- Agrupa variables a partir de una tabla
//- @author zkreations
//- @link https://www.zkreations.com

mixin skin-group(name, object)
  Group(description=name, selector=object.selector)
    each group, key in object.group
      +skin-variable(key, group)

//- Blogger Skin
//-
//- Estructura de datos b:skin
//- @author zkreations
//- @link https://www.zkreations.com

mixin skin(enable=true)
  if enable
    +cdata("b:skin")
      +skin-meta(themeInfo)
      | 
      | /*
      //- Asignamos las variables correspondientes al tema
      if (blogger.commentsThemeVars)
        - style = Object.assign({[blogger.commentsTheme]: commentVars[blogger.commentsTheme]}, style);
      //- Todas las variables especificadas
      +skin-variables(style)
      |
      | */
      |
      if block
        block
  else
    b:if(cond=view.layout): b:skin/

//- Blogger Template Skin
//-
//- Estructura de datos b:template-skin
//- @author zkreations
//- @link https://www.zkreations.com

mixin template-skin
  b:if(cond=view.layout)
    +cdata("b:template-skin")
      if block
        block

//- Blogger Responsive Image Style
//-
//- Inserta la inclusion responsiveImageStyle
//- @author zkreations
//- @link https://www.zkreations.com

mixin responsiveImageStyle(params)
  -
    params = Object.assign({
      image: "data:skin.vars.body_background.image",
      selector: "body",
    }, params);

  b:include(cond=`!${view.preview}`,
      data=getObjectData(params),
      name='responsiveImageStyle')